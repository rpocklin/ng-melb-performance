doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Benchpressing Angular.js

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section
        h2
          span Benchpressing Angular + Javascript
        br
        img(src="../images/benchpress1.jpg")

      section
        br
        br
        h2 Quick Intro
        li
        li Rob Pocklington
        li Full-stack developer my whole career (12 years)
        li
          | been using <span style="color: #99cc00">J-Query</span> and <span style="color: #9966ff">Javascript</span> for 5+ years
        li
          | <span style="color: #00cc66">Backbone.js</span> for almost 2 years
        li
          | <span style="color: #6699ff">Angular.js</span> for the same
        br
        br
        br
        br
        br
        br

      section
        h2 What am I here to talk about?
        li
        li.small(style="color: #6688ff;") Why frontend performance is important
        li.small(style="color: #aaccff") Common performance issues in Javascript
        li
        li.small(style="color: #00ffaa") Review of tools (that help you to):
        li.small(style="color: #eeaaaa") Write performance tests
        li.small(style="color: #ddeecc") Run (and automate) performance tests
        br
        li
      section
        h2 Performance - why do we care?
        li
        li Because your users <strike>are impatient</strike> have expectations
        li
          i http://yoursite.com takes ...
        li 0.1 second &nbsp;&nbsp;:)
        li 1 second &nbsp;&nbsp;&nbsp;&nbsp;:|<br>
        li
          img(src="../images/spinner.gif")
          br
        li
          | 5 seconds&nbsp;&nbsp;&nbsp;&nbsp;:( <br>

      section
        h2 Fast Forwarding past ...
        li
        li
          | Animations / CSS 3
          | <br><span style="float: right">( check out: Transit.js or Velocity.js )</span><br><br>
        li
          | any type of API performance
          | <br><span style="float: right">( check out: Grindr, Gatling, JMeter, Apache Bench )</span><br><br>
        li
          | any functional  / end-to-end testing
          | <br><span style="float: right">( check out: Cucumber / JBehave / Selenium*.* )</span>
        br
        br
        br

      section
        br
        h2 Common performance issues in Javascript
        li.small read: lets see some buggy code!
        li
          p Recursion (see recursion)
          span.code.small http://localhost:9000/graph/perf-recursion.html
        li
          p Jank
          span.code.small http://rawgit.com/rpocklin/scroll-to-top/master/demo.html?load=1
        li
          p Memory issues / leaks (closure)
          span.code.small http://localhost:9000/graph/perf-closure-memory-leak.html
        br
        br

      section
        h2 Quick Tips for avoiding these problems
        li
        li Don't use implicit lexical binding in closures.
        li.code.small Instead use explicit function parameters.  Much cleaner.
        br
        li
          span Don't use
          code.small  setInterval&nbsp;
        li.code.small Instead use setTimeout and re-schedule on success.  Much safer.
        li
        li.code.small Bind = Unbind
        li.code.small
          span Always consider
          code &nbsp;$destroy
        br
        li If you're not sure... test!
        br

      section
        br
        h2 Testing Javascript
        li
        li JSTest Driver, Q-Unit, Jasmine,
        li Mocha, Chai...
        li Great for unit testing ...
        li but now you wanna test performance ...
        br
        br
        img(src="../images/coffee.png" style="width: 150px; height: 150px;")

      section
        h2 <u>What</u> should I performance test?
        li
        li
          | <span style="color: #66ff99">Algorithmic Performance</span><br/>
          | ( transforms, calculations, regex, recursion, fibbonacci ) <br/><br/>
        li
          | <span style="color: #9999ff">DOM Rendering Performance</span><br/>
          | ( render times ) <br/><br/>
        li
          | <span style="color: #ff7070">Memory leaks</span><br/>
          | ( event listeners / timers / sockets / closures )
        br

      section
        br
        br
        h2 <u>How</u> do I performance test?
        li
        li You need a Javascript engine
        li
          img(src="../images/v8.jpg" width="200px" height="160px" style="top: 20px; position: relative; left: 10px;")
        br
        br
        li but which one should I use?
        li Whichever your customers use :)
        br
        br

      section
        h2 When performance testing ...
        p(style="font-size: 200%")
          | in <i style="color: #0099ff">Node.js</i> <br/><br/>
          | <code>npm install microtime</code>
        br
        br
        br
        br
        br
      section
        br
        br
        h2 When performance testing ...
        p(style="font-size: 200%")
          | in <i style="color: #99ff66">Chrome</i><br/><br/>
          | <code style="font-size: 75%">chrome --enable-benchmarking <br>--incognito</code>
        br
        p ( and don't use <i>Cygwin</i> )
        br
        br
        br
        br

      section
        h2
          | <span style="font-size: 150%">Enough already, lets run through the tools ...</span>
        br

      section
        br
        h2 Benchpress ( no plugin support )
        h3
          i https://github.com/angular/benchpress
        li.cmd benchpress run
        br
        li Used in the <a href="https://github.com/angular/angular.js/tree/master/benchmarks">angular.js</a> project
        li what do they test?
        li
        li order by (algorithmic)
        li large tables (watchers and DOM manipulation)
        li event delegation
        li parsing expressions (AngularJS parser)
      section
        li Needs chrome canary installed
        li Can test Angular.js controllers and views
        li Scant documentation, last commit 2 months ago
        li Fragile test harness ( obscure errors until you get it right )
        li
          | manual build step <code>benchpress build</code>
        li Can't automate
          i &nbsp; :(
        li Hard to do comparisons (no graphs etc.)
          i &nbsp; :(
        br

      section
        h2 Benchmark.js (Karma + Grunt plugins)
        li http://benchmarkjs.com
        p.code.small also http://jsperf.com
        br
        br
      section
        br
        h2 Grunt-benchmark ( benchmark.js )
        h3
          i https://github.com/shama/grunt-benchmark
        p.cmd grunt benchmark
        li
        li
          span Cannot reference&nbsp;
          span.code window
          span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :(
        li Can't use
          span.code  inject()
          span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:(
        li Outputs to CSV or JSON and ASCII table :)
        li but no JUnit Reporter XML&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:(
        li Not widely adopted &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:(
        br
        br


      section
        br
        h2 Karma-benchmark ( benchmark.js )
        h3
          i https://github.com/JamieMason/karma-benchmark
        p.cmd grunt karma:benchmarkjs
        li
        li Can reference&nbsp;
          span.code window
          span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:)
        li Can't use
          span.code  inject()
          span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:(
        li Good CI integration - JUnit Reporter :)
        br
        br
        br
        br

      section
        h2 Benchmark.js ( no build plugins )
        h3
          i http://benchmarkjs.com
        p.cmd grunt karma:unit
        li
        li Works with Jasmine&nbsp;
          span.code &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w00t
          span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:)
          br
        li Can reference&nbsp;
          span.code window
          span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:)
        li
          span &nbsp;&nbsp;&nbsp;Can use&nbsp;
          span.code inject
          span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:)&nbsp;&nbsp;
          br
        li &nbsp;&nbsp;Can assert performance metrics  :)&nbsp;
        li Can't graph different algorithms :(

      section
        br
        h2 JSLitmus ( no build plugins )
        h3
          i http://www.broofa.com/Tools/JSLitmus/
        p.cmd grunt karma:jslitmus
        li
        li Works with Jasmine&nbsp;
          span.code &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w00t
          span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:)
          br
        li Can reference&nbsp;
          span.code window
          span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:)
        li
          span &nbsp;&nbsp;&nbsp;Can use&nbsp;
          span.code inject
          span &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:)&nbsp;&nbsp;
          br
        li &nbsp;&nbsp;Can assert performance metrics  :)&nbsp;
        li Can't graph different algorithms :(
        br
        br

      section
        h2 Review
        li
        li
          | If you only want to performance test algorithms etc <br>(not UI / DOM / views)
          | use <span style="color: #99ff66">karma-benchmark</span>
        br
        li If you want to fail the build if a test fails a performance metric on any browser,
           | or you want to test AngularJS modules, use <br><span style="color: #aaccff">Benchmark.js</span> ( no plugins ) with Jasmine
        br
        li If you want to interact with tests and manually compare and run them yourself,
           | use whichever you like the most.
        br
        br

      section
        h2 Other Resources
        li
          |<br>
          | AngularJS - Benchpress performance tests
          |<br><i>https://github.com/angular/angular.js/tree/master/benchmarks</i>
        br
        li
          | Hundreds of performance test candiates in Javascript using Benchmark.js
          |<br><i>http://www.jsperf.com</i>
        br
        li
          |<a href="http://google.github.io/latency-benchmark/">Google's Web Browser Latency Benchmark</a>
          |<br><i>http://google.github.io/latency-benchmark/</i>
        br
        li
          | <a href="https://github.com/marmelab/gremlins.js">Gremlins.js</a> - aka Chaos MonkeyJS
          | <br><i>https://github.com/marmelab/gremlins.js</i>
        br

      section
        h2(style="color: #aa99ff") Questions?
        br
        br
        br


    script(src='build/build.js')




